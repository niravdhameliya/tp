/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mileset.neeleshengineers.View.servicePO;

import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.mileset.neeleshengineers.controller.servicePO.alChallanCallBack;
import com.mileset.neeleshengineers.controller.servicePO.getChallanFromChallanId;
import com.mileset.neeleshengineers.controller.servicePO.getLabourInvoiceFromCustId;
import com.mileset.neeleshengineers.controller.servicePO.labourCustIDCallBack;
import com.mileset.neeleshengineers.modal.Challan;
import com.mileset.neeleshengineers.modal.ServicePO;
import com.mileset.neeleshengineers.modal.laborinvoice.LaborInvoiceDetails;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

public class ViewAllLabourList extends javax.swing.JDialog {

    String custId;
    ArrayList<LaborInvoiceDetails> labourInvoiceList;
    private TableRowSorter<TableModel> rowSorter;
    ServicePO st;

    public ViewAllLabourList(String custId, ServicePO st) {
        initComponents();
        this.custId = custId;
        this.st = st;
        getLabourInvoiceFromCustId glifc = new getLabourInvoiceFromCustId(custId);
        glifc.fetch(new labourCustIDCallBack() {
            @Override
            public void callBack(ArrayList<LaborInvoiceDetails> value) {
                labourInvoiceList = value;
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                for (int y = 0; y < labourInvoiceList.size(); y++) {
                    LaborInvoiceDetails lid = labourInvoiceList.get(y);
                    model.addRow(new Object[]{lid.getInvoice_id(), lid.getPONo(), lid.getDate(), lid.getItemList().size()});
                }
            }

            @Override
            public void recordNotPresent() {

            }
        });
        
        jTable1.setFont(new Font("Serif", Font.PLAIN, 20));
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        rowSorter = new TableRowSorter<>(jTable1.getModel());
        jTable1.setRowSorter(rowSorter);
        jTextField1.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = jTextField1.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = jTextField1.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

        });
//        getServicePOFromPOId aaa = new getServicePOFromPOId("-LKp4tFxfUHuS2NAJk3O", "ddsf2");
        //      ServicePO po = aaa.getPO();
        // System.out.println("ss: " + po.getItems().size());
        jTextField1.setText(st.getPoid());
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("View All Labour List");
        setModal(true);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Labour Invoice ID", "PO number", "Date", "Labour Invoice Items"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTextField1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Search");

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("Edit ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 309, Short.MAX_VALUE)))
                        .addContainerGap(137, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int row = jTable1.getSelectedRow();
        if (row != -1) {
            String lid = jTable1.getValueAt(row, 0).toString();
            lid = lid.replaceAll("/", "-");
            System.out.println("lid: " + lid);
            removeLID(lid);
            remove(lid);
//            jTable1.remove(row);
            this.dispose();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        if (row != -1) {
            String lid = jTable1.getValueAt(row, 0).toString();
//            lid = lid.replaceAll("/", "-");
            System.out.println("lid: " + lid);

            for (int j = 0; j < labourInvoiceList.size(); j++) {
                final LaborInvoiceDetails tempLid = labourInvoiceList.get(j);
                if (lid.equals(tempLid.getInvoice_id())) {
                    String challanId = tempLid.getChallanNo();
                    getChallanFromChallanId get = new getChallanFromChallanId(st.getPoid(), custId, challanId);
                    get.fetch(new alChallanCallBack() {

                        @Override
                        public void onCallback(ArrayList<Challan> value) {

                        }

                        @Override
                        public void onCallback1(Challan value) {
                            System.out.println("value: " + value.getChallanNo());
                            EditLabourInvoice edit = new EditLabourInvoice(tempLid, value, st);
                        }

                        @Override
                        public void recordNotPresent() {

                        }

                    });
                }
            }
        }else{
        JOptionPane.showMessageDialog(this, "Select labour Invoice To Edit");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void removeLID(String lid) {
        //LC-2018-2019-8
        String yr = lid.substring(3, 12);
        String uid = lid.substring(13);
        FirebaseDatabase defaultDatabase = FirebaseDatabase.getInstance();
        DatabaseReference mRef = defaultDatabase.getReference("data").child("labourId").child(yr);
        mRef.child(uid).setValue(null, new DatabaseReference.CompletionListener() {
            @Override
            public void onComplete(DatabaseError de, DatabaseReference dr) {
                //delMsg();
            }
        });

    }

    private void remove(String lid) {
        FirebaseDatabase defaultDatabase = FirebaseDatabase.getInstance();
        DatabaseReference mRef = defaultDatabase.getReference("data").child("SPOLabourInvoice").child(custId);
        mRef.child(lid).setValue(null, new DatabaseReference.CompletionListener() {
            @Override
            public void onComplete(DatabaseError de, DatabaseReference dr) {
                delMsg();
            }
        });

    }

    public void delMsg() {
        JOptionPane.showMessageDialog(this, "Record deleted successfully");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
